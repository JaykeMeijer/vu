/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ADD_H_RPCGEN
#define _ADD_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>


struct paper {
	long len;
	char *val;
};
typedef struct paper paper;
#ifdef __cplusplus
extern "C" bool_t xdr_paper(XDR *, paper*);
#elif __STDC__
extern  bool_t xdr_paper(XDR *, paper*);
#else /* Old Style C */
bool_t xdr_paper();
#endif /* Old Style C */


struct str_add {
	char *name;
	char *title;
	struct paper p;
};
typedef struct str_add str_add;
#ifdef __cplusplus
extern "C" bool_t xdr_str_add(XDR *, str_add*);
#elif __STDC__
extern  bool_t xdr_str_add(XDR *, str_add*);
#else /* Old Style C */
bool_t xdr_str_add();
#endif /* Old Style C */


struct str_list {
	int number;
	char *name;
	char *title;
	struct str_list *next;
};
typedef struct str_list str_list;
#ifdef __cplusplus
extern "C" bool_t xdr_str_list(XDR *, str_list*);
#elif __STDC__
extern  bool_t xdr_str_list(XDR *, str_list*);
#else /* Old Style C */
bool_t xdr_str_list();
#endif /* Old Style C */


struct str_info {
	int number;
	char *name;
	char *title;
};
typedef struct str_info str_info;
#ifdef __cplusplus
extern "C" bool_t xdr_str_info(XDR *, str_info*);
#elif __STDC__
extern  bool_t xdr_str_info(XDR *, str_info*);
#else /* Old Style C */
bool_t xdr_str_info();
#endif /* Old Style C */


typedef int int_out;
#ifdef __cplusplus
extern "C" bool_t xdr_int_out(XDR *, int_out*);
#elif __STDC__
extern  bool_t xdr_int_out(XDR *, int_out*);
#else /* Old Style C */
bool_t xdr_int_out();
#endif /* Old Style C */


#define PAPER_SERVER ((rpc_uint)0x20002345)
#define PAPER_VERSION ((rpc_uint)1)

#ifdef __cplusplus
#define ADD ((rpc_uint)1)
extern "C" int_out * add_1(str_add *, CLIENT *);
extern "C" int_out * add_1_svc(str_add *, struct svc_req *);
#define REMOVE ((rpc_uint)2)
extern "C" int_out * remove_1(int *, CLIENT *);
extern "C" int_out * remove_1_svc(int *, struct svc_req *);
#define LIST ((rpc_uint)3)
extern "C" str_list * list_1(void *, CLIENT *);
extern "C" str_list * list_1_svc(void *, struct svc_req *);
#define INFO ((rpc_uint)4)
extern "C" str_info * info_1(int *, CLIENT *);
extern "C" str_info * info_1_svc(int *, struct svc_req *);
#define FETCH ((rpc_uint)5)
extern "C" paper * fetch_1(int *, CLIENT *);
extern "C" paper * fetch_1_svc(int *, struct svc_req *);

#elif __STDC__
#define ADD ((rpc_uint)1)
extern  int_out * add_1(str_add *, CLIENT *);
extern  int_out * add_1_svc(str_add *, struct svc_req *);
#define REMOVE ((rpc_uint)2)
extern  int_out * remove_1(int *, CLIENT *);
extern  int_out * remove_1_svc(int *, struct svc_req *);
#define LIST ((rpc_uint)3)
extern  str_list * list_1(void *, CLIENT *);
extern  str_list * list_1_svc(void *, struct svc_req *);
#define INFO ((rpc_uint)4)
extern  str_info * info_1(int *, CLIENT *);
extern  str_info * info_1_svc(int *, struct svc_req *);
#define FETCH ((rpc_uint)5)
extern  paper * fetch_1(int *, CLIENT *);
extern  paper * fetch_1_svc(int *, struct svc_req *);

#else /* Old Style C */
#define ADD ((rpc_uint)1)
extern  int_out * add_1();
extern  int_out * add_1_svc();
#define REMOVE ((rpc_uint)2)
extern  int_out * remove_1();
extern  int_out * remove_1_svc();
#define LIST ((rpc_uint)3)
extern  str_list * list_1();
extern  str_list * list_1_svc();
#define INFO ((rpc_uint)4)
extern  str_info * info_1();
extern  str_info * info_1_svc();
#define FETCH ((rpc_uint)5)
extern  paper * fetch_1();
extern  paper * fetch_1_svc();
#endif /* Old Style C */

#endif /* !_ADD_H_RPCGEN */
